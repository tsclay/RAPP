{"version":3,"sources":["components/HelloMessage.jsx","components/PersonForm.jsx","index.js"],"names":["HelloMessage","className","PersonForm","props","componentDidMount","event","axios","get","API_URL","then","response","setState","people","data","createPerson","preventDefault","post","name","state","newPersonName","age","newPersonAge","console","log","updatePerson","e","a","id","target","getAttribute","put","updatePersonName","updatePersonAge","deletePerson","delete","value","changeNewPersonName","changeNewPersonAge","render","onSubmit","onKeyUp","type","placeholder","map","person","key","onClick","React","Component","PEOPLE","ReactDOM","StrictMode","document","getElementById"],"mappings":"wNAUeA,MARf,WACE,OACE,yBAAKC,UAAU,WACb,kD,+DCFeC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,gBAOFC,kBAAoB,SAACC,GACnBC,IAAMC,IAAI,EAAKC,SAASC,MAAK,SAACC,GAC5B,EAAKC,SAAS,CACZC,OAAQF,EAASG,WAXJ,EAgBnBC,aAAe,SAACT,GACdA,EAAMU,iBACNT,IACGU,KAAK,EAAKR,QAAS,CAClBS,KAAM,EAAKC,MAAMC,cACjBC,IAAK,EAAKF,MAAMG,eAEjBZ,MAAK,SAACC,GACLY,QAAQC,IAAIb,GACZ,EAAKC,SAAS,CACZC,OAAQF,EAASG,WA1BN,EA+BnBW,aA/BmB,uCA+BJ,WAAOC,GAAP,iBAAAC,EAAA,6DACbD,EAAEV,iBACIY,EAAKF,EAAEG,OAAOC,aAAa,MAFpB,SAGUvB,IAAMwB,IAAN,UAAa,EAAKtB,QAAlB,YAA6BmB,GAAM,CACxDV,KAAM,EAAKC,MAAMa,iBACjBX,IAAK,EAAKF,MAAMc,kBALL,OAGPtB,EAHO,OAOb,EAAKC,SAAS,CAAEC,OAAQF,EAASG,OAPpB,2CA/BI,wDAyCnBoB,aAzCmB,uCAyCJ,WAAOR,GAAP,eAAAC,EAAA,sEACUpB,IAAM4B,OAAN,UAAgB,EAAK1B,QAArB,YAAgCiB,EAAEG,OAAOO,QADnD,OACPzB,EADO,OAEbY,QAAQC,IAAIb,EAASG,MACrB,EAAKF,SAAS,CAAEC,OAAQF,EAASG,OAHpB,2CAzCI,wDA+CnBuB,oBAAsB,SAAC/B,GACrB,EAAKM,SAAS,CACZQ,cAAed,EAAMuB,OAAOO,SAjDb,EAqDnBE,mBAAqB,SAAChC,GACpB,EAAKM,SAAS,CACZU,aAAchB,EAAMuB,OAAOO,SAvDZ,EA2DnBH,gBAAkB,SAAC3B,GACjB,EAAKM,SAAS,CACZqB,gBAAiB3B,EAAMuB,OAAOO,SA7Df,EAiEnBJ,iBAAmB,SAAC1B,GAClB,EAAKM,SAAS,CACZoB,iBAAkB1B,EAAMuB,OAAOO,SAnEhB,EAuEnBG,OAAS,WACP,OACE,yBAAKrC,UAAU,aACb,8CACA,0BAAMsC,SAAU,EAAKzB,cACnB,2BACE0B,QAAS,EAAKJ,oBACdK,KAAK,OACLC,YAAY,SAEd,6BACA,2BACEF,QAAS,EAAKH,mBACdI,KAAK,SACLC,YAAY,QAEd,6BACA,4BAAQD,KAAK,UAAb,WAEF,4CACA,4BACG,EAAKvB,MAAMN,OAAO+B,KAAI,SAACC,GACtB,OACE,wBAAIC,IAAKD,EAAOjB,IACbiB,EAAO3B,KADV,KACkB2B,EAAOxB,IACvB,4BAAQe,MAAOS,EAAOjB,GAAImB,QAAS,EAAKb,cAAxC,UAGA,0BAAMN,GAAIiB,EAAOjB,GAAIY,SAAU,EAAKf,cAClC,2BACEgB,QAAS,EAAKT,iBACdU,KAAK,OACLC,YAAY,SAEd,2BACEF,QAAS,EAAKR,gBACdS,KAAK,OACLC,YAAY,QAEd,4BAAQD,KAAK,UAAb,kBA5Gd,EAAKvB,MAAQ,CACXN,OAAQ,IAEV,EAAKJ,QAAUL,EAAMK,QALJ,E,UADmBuC,IAAMC,WCQ1CC,EAAS,GAKXA,EAAS,UAKXC,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAY3C,QAASyC,KAEvBG,SAASC,eAAe,W","file":"static/js/main.b54775fc.chunk.js","sourcesContent":["import React from 'react';\n\nfunction HelloMessage() {\n  return (\n    <div className=\"heading\">\n      <h1>Hello, RAPP app!</h1>\n    </div>\n  );\n}\n\nexport default HelloMessage;\n","import React from \"react\";\nimport axios from 'axios'\n\nexport default class PersonForm extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      people: [],\n    };\n    this.API_URL = props.API_URL\n  }\n\n  componentDidMount = (event) => {\n    axios.get(this.API_URL).then((response) => {\n      this.setState({\n        people: response.data,\n      });\n    });\n  };\n\n  createPerson = (event) => {\n    event.preventDefault();\n    axios\n      .post(this.API_URL, {\n        name: this.state.newPersonName,\n        age: this.state.newPersonAge,\n      })\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          people: response.data,\n        });\n      });\n  };\n\n  updatePerson = async (e) => {\n    e.preventDefault();\n    const id = e.target.getAttribute(\"id\");\n    const response = await axios.put(`${this.API_URL}/${id}`, {\n      name: this.state.updatePersonName,\n      age: this.state.updatePersonAge,\n    });\n    this.setState({ people: response.data });\n  };\n\n  deletePerson = async (e) => {\n    const response = await axios.delete(`${this.API_URL}/${e.target.value}`);\n    console.log(response.data);\n    this.setState({ people: response.data });\n  };\n\n  changeNewPersonName = (event) => {\n    this.setState({\n      newPersonName: event.target.value,\n    });\n  };\n\n  changeNewPersonAge = (event) => {\n    this.setState({\n      newPersonAge: event.target.value,\n    });\n  };\n\n  updatePersonAge = (event) => {\n    this.setState({\n      updatePersonAge: event.target.value,\n    });\n  };\n\n  updatePersonName = (event) => {\n    this.setState({\n      updatePersonName: event.target.value,\n    });\n  };\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <h2>Add new person</h2>\n        <form onSubmit={this.createPerson}>\n          <input\n            onKeyUp={this.changeNewPersonName}\n            type=\"text\"\n            placeholder=\"name\"\n          />\n          <br />\n          <input\n            onKeyUp={this.changeNewPersonAge}\n            type=\"number\"\n            placeholder=\"age\"\n          />\n          <br />\n          <button type=\"submit\">CREATE</button>\n        </form>\n        <h2>Contact List</h2>\n        <ul>\n          {this.state.people.map((person) => {\n            return (\n              <li key={person.id}>\n                {person.name}: {person.age}\n                <button value={person.id} onClick={this.deletePerson}>\n                  DELETE\n                </button>\n                <form id={person.id} onSubmit={this.updatePerson}>\n                  <input\n                    onKeyUp={this.updatePersonName}\n                    type=\"text\"\n                    placeholder=\"name\"\n                  />\n                  <input\n                    onKeyUp={this.updatePersonAge}\n                    type=\"text\"\n                    placeholder=\"age\"\n                  />\n                  <button type=\"submit\">Change</button>\n                </form>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HelloMessage from './components/HelloMessage';\nimport PersonForm from './components/PersonForm'\n\n// Change to not 'dev' when ready for production\nconst ENV = \"prod\";\n\n// API route that will change based on env setting\n// Add to these as necessary\nlet PEOPLE = '';\n\nif (ENV === 'dev') {\n  PEOPLE = \"http://localhost:8888/people\"\n} else {\n  PEOPLE = \"/people\";\n}\n\n\n// If adding extra API routes, make sure to pass them down as props\nReactDOM.render(\n  <React.StrictMode>\n    <HelloMessage />\n    <PersonForm API_URL={PEOPLE}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}